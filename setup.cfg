[metadata]
name = repo-maintenance
author = Common Partial Wave Analysis
author_email = compwa-admin@ep1.rub.de
maintainer_email = compwa-admin@ep1.rub.de
description = Pre-commit hooks that ensure that ComPWA repositories have a similar developer set-up
long_description = file: README.md
long_description_content_type = text/markdown
project_urls =
    Tracker = https://github.com/ComPWA/repo-maintenance/issues
    Source = https://github.com/ComPWA/repo-maintenance
license = GPLv3 or later
classifiers =
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Typing :: Typed

[options]
python_requires = >=3.6
setup_requires =
    setuptools_scm
install_requires =
    nbformat
    pip-tools
    PyYAML
packages = find:
package_dir =
    =src

[options.extras_require]
test =
    pytest
    pytest-cov
    pytest-xdist
format =
    black
    isort
flake8 =
    flake8 <4  # max version helps PyPI dependency resolver, see https://github.com/MichaelKim0407/flake8-use-fstring/pull/11
    flake8-blind-except
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-pytest-style
    flake8-rst-docstrings
    flake8-use-fstring
    pep8-naming
mypy =
    mypy
    types-PyYAML
    types-setuptools
lint =
    %(flake8)s
    %(mypy)s
    pydocstyle
    pylint
    radon
sty =
    %(format)s
    %(lint)s
    %(test)s  # for pytest type hints
    pre-commit >=1.4.0
dev =
    %(sty)s
    %(test)s
    tox >=1.9  # for skip_install, use_develop

[options.entry_points]
console_scripts =
    check-dev-files = repoma.pre_commit_hooks.check_dev_files:main
    fix-first-nbcell = repoma.pre_commit_hooks.fix_first_nbcell:main
    fix-nbformat-version = repoma.pre_commit_hooks.fix_nbformat_version:main
    format-setup-cfg = repoma.pre_commit_hooks.format_setup_cfg:main
    pin-nb-requirements = repoma.pre_commit_hooks.pin_nb_requirements:main
    pin-requirements = repoma.pre_commit_hooks.check_dev_files:main

[options.packages.find]
where = src

[options.package_data]
repoma =
    .cspell.json
    .github/*
    .github/ISSUE_TEMPLATE/*
    .gitpod.yml
    .prettierrc
    py.typed
    workflows/milestone.yml
    workflows/requirements-cron.yml
    workflows/requirements-pr.yml
